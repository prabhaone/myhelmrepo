# Copyright (c) 2019 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
---
{{- if .Values.policies.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ditto.fullname" . }}-policies
  labels:
    app.kubernetes.io/name: {{ include "ditto.name" . }}-policies
{{ include "ditto.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.policies.replicaCount }}
  strategy:
  {{- with .Values.policies.updateStrategy }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "ditto.name" . }}-policies
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "ditto.name" . }}-policies
        app.kubernetes.io/instance: {{ .Release.Name }}
        actorSystemName: {{ .Values.akka.actorSystemName }}
        {{- with .Values.policies.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if .Values.global.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/"
        prometheus.io/port: "{{ .Values.global.prometheus.port }}"
        {{- end }}
        checksum/mongodb-config: {{ include (print $.Template.BasePath "/mongodb-secret.yaml") . | sha256sum }}
        {{- with .Values.policies.additionalAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ template "ditto.serviceAccountName" . }}
      {{- end }}
    {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}-policies
          image: {{ printf "%s:%s" .Values.policies.image.repository ( default .Chart.AppVersion ( default .Values.dittoTag .Values.policies.image.tag ) ) }}
          imagePullPolicy: {{ .Values.policies.image.pullPolicy }}
          args:
            - "java"
          {{- if .Values.policies.systemProps }}
            {{- toYaml .Values.policies.systemProps | nindent 12 }}
          {{- end }}
            - "-jar"
            - "/opt/ditto/starter.jar"
          env:
            - name: POD_LABEL_SELECTOR
              value: "app.kubernetes.io/name=%s"
            - name: POD_NAMESPACE
              value: {{.Release.Namespace}}
            - name: INSTANCE_INDEX
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: DISCOVERY_METHOD
              value: "kubernetes-api"
            - name: TZ
              value: "{{ .Values.global.timezone }}"
            - name: OPENJ9_JAVA_OPTIONS
              value: "-XX:+ExitOnOutOfMemoryError -Xtune:virtualized -Xss512k -XX:MaxRAMPercentage=80 -XX:InitialRAMPercentage=40 -Dakka.coordinated-shutdown.exit-jvm=on{{ if .Values.dbconfig.policies.ssl }} -Dorg.mongodb.async.type=netty{{ end }}"
            - name: MONGO_DB_SSL_ENABLED
              value: "{{ if .Values.dbconfig.policies.ssl }}true{{ else }}false{{ end }}"
            - name: MONGO_DB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ include "ditto.fullname" . }}-mongodb-secret
                  key: policies-uri
          {{- if .Values.global.prometheus.enabled }}
            - name: PROMETHEUS_PORT
              value: "{{ .Values.global.prometheus.port }}"
          {{- end }}
          {{- if .Values.policies.extraEnv }}
            {{- toYaml .Values.policies.extraEnv | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: remoting
              containerPort: {{ .Values.akka.remoting.port }}
              protocol: TCP
            - name: management
              containerPort: {{ .Values.akka.mgmthttp.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              port: management
              path: /ready
            initialDelaySeconds: {{ .Values.policies.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.policies.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.policies.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.policies.readinessProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              port: management
              path: /alive
            initialDelaySeconds: {{ .Values.policies.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.policies.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.policies.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.policies.livenessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.policies.resources | nindent 12 }}
      {{- with .Values.policies.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.policies.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.policies.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
